#------------------------------------------------------------------------------
# Loads the values of important system environment as action outputs.  Here's 
# the list of variables what we're currently loading:
#
#   COMPUTERNAME
#   NF_REPOS
# 
#   NF_BUILD
#   NF_CACHE
#   NF_CODEDOC
#   NF_ROOT
#   NF_SAMPLES_CADENCE
#   NF_SNIPPETS
#   NF_TEMP
#   NF_TEST
#   NF_TOOLBIN
# 
#   NC_ACTIONS_ROOT
#   NC_BUILD
#   NC_CACHE
#   NC_NUGET_DEVFEED
#   NC_NUGET_VERSIONER
#   NC_REPOS
#   NC_ROOT
#   NC_TEMP
#   NC_TEST
#   NC_TOOLBIN
#
# This action also sets the MASTER_PASSWORD environment variable to the master-password 
# when passed. The MASTER_PASSWORD environment variable is used by the underlying 
# Powershell deployment scripts to access the current user's 1Password secrets on headless
# jobrunner machines. We'll also return outputs for the following 1Password secrets for 
# convenience:
# 
#   MASTER_PASSWORD
# 
#   AWS_ACCESS_KEY_ID
#   AWS_SECRET_ACCESS_KEY
#   DOCKER_USERNAME
#   DOCKER_PASSWORD
#   GITHUB_USERNAME
#   GITHUB_PASSWORD
#   GITHUB_PAT
#   NEONFORGE_USERNAME
#   NEONFORGE_PASSWORD
#   NUGET_PUBLIC_KEY
#   NUGET_VERSIONER_KEY
#   NUGET_DEVFEED_KEY
#   TEAM_DEVOPS_CHANNEL

name: environment
description: "Loads important JOBRUNNER system environment variables into the current job"
inputs:
  master-password:
    description: "Optionally specifies the master 1Password to override the MASTER_PASSWORD environment variable"
    required: false
outputs:
  #-------------------------------------------------------------
  # Environment variables
  #-------------------------------------------------------------
  COMPUTERNAME:
    description: "Returns the COMPUTERNAME environment variable"
  NF_REPOS:
    description: "Returns the NF_REPOS environment variable"
  NF_BUILD:
    description: "Returns the NF_BUILD environment variable"
  NF_CACHE:
    description: "Returns the NF_CACHE environment variable"
  NF_CODEDOC:
    description: "Returns the NF_CODEDOC environment variable"
  NF_ROOT:
    description: "Returns the NF_ROOT environment variable"
  NF_SAMPLES_CADENCE:
    description: "Returns the NF_SAMPLES_CADENCE environment variable"
  NF_SNIPPETS:
    description: "Returns the NF_SNIPPETS environment variable"
  NF_TEMP:
    description: "Returns the NF_TEMP environment variable"
  NF_TEST:
    description: "Returns the NF_TEST environment variable"
  NF_TOOLBIN:
    description: "Returns the NF_TOOLBIN environment variable"
  NC_ACTIONS_ROOT:
    description: "Returns the NC_ACTIONS_ROOT environment variable"
  NC_BUILD:
    description: "Returns the NC_BUILD environment variable"
  NC_CACHE:
    description: "Returns the NC_CACHE environment variable"
  NC_NUGET_DEVFEED:
    description: "Returns the NC_NUGET_DEVFEED environment variable"
  NC_NUGET_VERSIONER:
    description: "Returns the NC_NUGET_VERSIONER environment variable"
  NC_REPOS:
    description: "Returns the NC_REPOS environment variable"
  NC_ROOT:
    description: "Returns the NC_ROOT environment variable"
  NC_TEMP:
    description: "Returns the NC_TEMP environment variable"
  NC_TEST:
    description: "Returns the NC_TEST environment variable"
  NC_TOOLBIN:
    description: "Returns the NC_TOOLBIN environment variable"
  #-------------------------------------------------------------
  # Secrets
  #-------------------------------------------------------------
  MASTER_PASSWORD:
    description: "Returns the MASTER_PASSWORD secret"
  AWS_ACCESS_KEY_ID:
    description: "Returns the AWS_ACCESS_KEY_ID secret"
  AWS_SECRET_ACCESS_KEY:
    description: "Returns the AWS_SECRET_ACCESS_KEY secret"
  DOCKER_USERNAME:
    description: "Returns the DOCKER_USERNAME secret"
  DOCKER_PASSWORD:
    description: "Returns the DOCKER_PASSWORD secret"
  GITHUB_USERNAME:
    description: "Returns the GITHUB_USERNAME secret"
  GITHUB_PASSWORD:
    description: "Returns the GITHUB_PASSWORD secret"
  GITHUB_PAT:
    description: "Returns the GITHUB_PAT secret"
  NEONFORGE_USERNAME:
    description: "Returns the NEONFORGE_USERNAME secret"
  NEONFORGE_PASSWORD:
    description: "Returns the NEONFORGE_PASSWORD secret"
  NUGET_PUBLIC_KEY:
    description: "Returns the NUGET_PUBLIC_KEY secret"
  NUGET_VERSIONER_KEY:
    description: "Returns the NUGET_VERSIONER_KEY secret"
  NUGET_DEVFEED_KEY:
    description: "Returns the NUGET_DEVFEED_KEY secret"
  TEAM_DEVOPS_CHANNEL:
    description: "Returns the TEAM_DEVOPS_CHANNEL secret"
runs:
  using: composite
  steps:
  - shell: pwsh
    run: |
    
      # Verify that we're running on a properly configured neonFORGE jobrunner 
      # and import the deployment and action scripts from neonCLOUD.
      
      # NOTE: This assumes that the required [$NC_ROOT/Powershell/*.ps1] files
      #       in the current clone of the repo on the runner are up-to-date
      #       enough to be able to obtain secrets and use GitHub Action functions.
      #       If this is not the case, you'll have to manually pull the repo 
      #       first on the runner.
      
      $ncRoot = $env:NC_ROOT
      
      if (![System.IO.Directory]::Exists($ncRoot))
      {
          throw "Runner Config: neonCLOUD repo is not present."
      }
      
      $ncPowershell = [System.IO.Path]::Combine($ncRoot, "Powershell")
      
      Push-Location $ncPowershell
      . ./includes.ps1
      Pop-Location
      
      # Loads an environment variable into the current job environment.
      
      function LoadVariable
      {
          [CmdletBinding()]
          param (
              [Parameter(Position=0, Mandatory=1)]
              [string]$variable
          )
          
          $value = [System.Environment]::GetEnvironmentVariable($variable)
          
          if ([System.String]::IsNullOrEmpty($value))
          {
              throw "The [$variable] environment variable does not exist."
          }
          
          Set-ActionEnvironmentVariable $variable $value
      }
      
      # COMPUTERNAME is a special case
      
      $computername = [System.Net.Dns]::GetHostName()
      Set-ActionEnvironmentVariable "COMPUTERNAME" $computername
      
      # Load the environment variables
      
      LoadVariable NF_REPOS

      LoadVariable NF_BUILD
      LoadVariable NF_CACHE
      LoadVariable NF_CODEDOC
      LoadVariable NF_ROOT
      LoadVariable NF_SAMPLES_CADENCE
      LoadVariable NF_SNIPPETS
      LoadVariable NF_TEMP
      LoadVariable NF_TEST
      LoadVariable NF_TOOLBIN
 
      LoadVariable NC_ACTIONS_ROOT
      LoadVariable NC_BUILD
      LoadVariable NC_CACHE
      LoadVariable NC_NUGET_DEVFEED
      LoadVariable NC_NUGET_VERSIONER
      LoadVariable NC_REPOS
      LoadVariable NC_ROOT
      LoadVariable NC_TEMP
      LoadVariable NC_TEST
      LoadVariable NC_TOOLBIN
      
      # When the action had access to DEVBOT's master 1Password, persist the password
      # to the MASTER-PASSWORD environment variable and also load useful common 
      # secrets into the process environment and job environments.
      
      $masterPassword = "${{ inputs.master-password }}"
      
      if ([System.String]::IsNullOrEmpty($masterPassword))
      {
          $masterPassword = $env:MASTER_PASSWORD
      }
      
      if (![System.String]::IsNullOrEmpty($masterPassword))
      {
          [System.Environment]::SetEnvironmentVariable("MASTER_PASSWORD", $masterPassword)
          
          # Reads a 1Password secret and adds it to the process and
          # job environments.
          
          function LoadSecret
          {
              [CmdletBinding()]
              param (
                  [Parameter(Position=0, Mandatory=1)]
                  [string]$variable,
                  [Parameter(Position=1, Mandatory=1)]
                  [string]$secretName
              )
              
              $value = GetSecretValue -name $secretName -masterPassword $masterPassword -nullOnNotFound $false
              
              Write-Output "$secretName = $value"
              
              if (![System.String]::IsNullOrEmpty($value))
              {
                  [System.Environment]::SetEnvironmentVariable($variable, $value)
                  Set-ActionEnvironmentVariable $variable $value
              }
          }
          
          LoadSecret "AWS_ACCESS_KEY_ID"     "AWS_ACCESS_KEY_ID[password]"
          LoadSecret "AWS_SECRET_ACCESS_KEY" "AWS_SECRET_ACCESS_KEY[password]"
          LoadSecret "DOCKER_USERNAME"       "DOCKER_LOGIN[username]"
          LoadSecret "DOCKER_PASSWORD"       "DOCKER_LOGIN[password]"
          LoadSecret "GITHUB_USERNAME"       "GITHUB_LOGIN[username]"
          LoadSecret "GITHUB_PASSWORD"       "GITHUB_LOGIN[password]"
          LoadSecret "GITHUB_PAT"            "GITHUB_PAT[password]"
          LoadSecret "NEONFORGE_USERNAME"    "NEONFORGE_LOGIN[username]"
          LoadSecret "NEONFORGE_PASSWORD"    "NEONFORGE_LOGIN[password]"
          LoadSecret "NUGET_PUBLIC_KEY"      "NUGET_PUBLIC_KEY[password]"
          LoadSecret "NUGET_VERSIONER_KEY"   "NUGET_VERSIONER_KEY[value]"
          LoadSecret "NUGET_DEVFEED_KEY"     "NUGET_DEVFEED_KEY[value]"
          LoadSecret "TEAM_DEVOPS_CHANNEL"   "TEAM_DEVOPS_CHANNEL[value]"
      }
      
